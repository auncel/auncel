package dev.yidafu.surpass.UserCenter.dao;

import dev.yidafu.surpass.UserCenter.entity.RegisterLogs;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface RegisterLogsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table register_logs
     *
     * @mbg.generated
     */
    @Delete({
        "delete from register_logs",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table register_logs
     *
     * @mbg.generated
     */
    @Insert({
        "insert into register_logs (id, registerTime, ",
        "registerTp, message)",
        "values (#{id,jdbcType=INTEGER}, #{registerTime,jdbcType=TIMESTAMP}, ",
        "#{registerTp,jdbcType=VARCHAR}, #{message,jdbcType=LONGVARCHAR})"
    })
    int insert(RegisterLogs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table register_logs
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, registerTime, registerTp, message",
        "from register_logs",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="registerTime", property="registerTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="registerTp", property="registerTp", jdbcType=JdbcType.VARCHAR),
        @Result(column="message", property="message", jdbcType=JdbcType.LONGVARCHAR)
    })
    RegisterLogs selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table register_logs
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, registerTime, registerTp, message",
        "from register_logs"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="registerTime", property="registerTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="registerTp", property="registerTp", jdbcType=JdbcType.VARCHAR),
        @Result(column="message", property="message", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<RegisterLogs> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table register_logs
     *
     * @mbg.generated
     */
    @Update({
        "update register_logs",
        "set registerTime = #{registerTime,jdbcType=TIMESTAMP},",
          "registerTp = #{registerTp,jdbcType=VARCHAR},",
          "message = #{message,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(RegisterLogs record);
}