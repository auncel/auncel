package dev.yidafu.surpass.UserCenter.dao;

import dev.yidafu.surpass.UserCenter.entity.LoginLogs;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface LoginLogsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table login_logs
     *
     * @mbg.generated
     */
    @Delete({
        "delete from login_logs",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table login_logs
     *
     * @mbg.generated
     */
    @Insert({
        "insert into login_logs (id, userId, ",
        "loginTime, loginIp, ",
        "`type`, message)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{loginTime,jdbcType=TIMESTAMP}, #{loginIp,jdbcType=VARCHAR}, ",
        "#{type,jdbcType=TINYINT}, #{message,jdbcType=LONGVARCHAR})"
    })
    int insert(LoginLogs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table login_logs
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, userId, loginTime, loginIp, `type`, message",
        "from login_logs",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="userId", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="loginTime", property="loginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="loginIp", property="loginIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.TINYINT),
        @Result(column="message", property="message", jdbcType=JdbcType.LONGVARCHAR)
    })
    LoginLogs selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table login_logs
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, userId, loginTime, loginIp, `type`, message",
        "from login_logs"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="userId", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="loginTime", property="loginTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="loginIp", property="loginIp", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.TINYINT),
        @Result(column="message", property="message", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<LoginLogs> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table login_logs
     *
     * @mbg.generated
     */
    @Update({
        "update login_logs",
        "set userId = #{userId,jdbcType=INTEGER},",
          "loginTime = #{loginTime,jdbcType=TIMESTAMP},",
          "loginIp = #{loginIp,jdbcType=VARCHAR},",
          "`type` = #{type,jdbcType=TINYINT},",
          "message = #{message,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(LoginLogs record);
}