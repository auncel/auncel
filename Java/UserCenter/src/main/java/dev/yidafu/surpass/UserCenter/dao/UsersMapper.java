package dev.yidafu.auncel.UserCenter.dao;

import dev.yidafu.auncel.UserCenter.entity.Users;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface UsersMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbg.generated
     */
    @Delete({
        "delete from users",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbg.generated
     */
    @Insert({
        "insert into users (id, nickname, ",
        "realname, mobile, ",
        "`password`, email, ",
        "avatar, `status`, ",
        "`role`, loginCount, ",
        "registerTime, lastLoginTime)",
        "values (#{id,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, ",
        "#{realname,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, ",
        "#{avatar,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, ",
        "#{role,jdbcType=INTEGER}, #{loginCount,jdbcType=TINYINT}, ",
        "#{registerTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP})"
    })
    int insert(Users record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, nickname, realname, mobile, `password`, email, avatar, `status`, `role`, ",
        "loginCount, registerTime, lastLoginTime",
        "from users",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="realname", property="realname", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="role", property="role", jdbcType=JdbcType.INTEGER),
        @Result(column="loginCount", property="loginCount", jdbcType=JdbcType.TINYINT),
        @Result(column="registerTime", property="registerTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="lastLoginTime", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP)
    })
    Users selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, nickname, realname, mobile, `password`, email, avatar, `status`, `role`, ",
        "loginCount, registerTime, lastLoginTime",
        "from users"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="nickname", property="nickname", jdbcType=JdbcType.VARCHAR),
        @Result(column="realname", property="realname", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="role", property="role", jdbcType=JdbcType.INTEGER),
        @Result(column="loginCount", property="loginCount", jdbcType=JdbcType.TINYINT),
        @Result(column="registerTime", property="registerTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="lastLoginTime", property="lastLoginTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Users> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbg.generated
     */
    @Update({
        "update users",
        "set nickname = #{nickname,jdbcType=VARCHAR},",
          "realname = #{realname,jdbcType=VARCHAR},",
          "mobile = #{mobile,jdbcType=VARCHAR},",
          "`password` = #{password,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "avatar = #{avatar,jdbcType=VARCHAR},",
          "`status` = #{status,jdbcType=INTEGER},",
          "`role` = #{role,jdbcType=INTEGER},",
          "loginCount = #{loginCount,jdbcType=TINYINT},",
          "registerTime = #{registerTime,jdbcType=TIMESTAMP},",
          "lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Users record);

  @Select("SELECT `password` FROM users where nickname = #{username}")
  @Results({
    @Result(property = "password",  column = "password", javaType = String.class),
  })
  Users getPwdByUsername(@Param("username") String username);

  @Select("SELECT `password` FROM users where email = #{email}")
  @Results({
    @Result(property = "email",  column = "email", javaType = String.class),
  })
  Users getPwdByEmail(@Param("email") String email);
}